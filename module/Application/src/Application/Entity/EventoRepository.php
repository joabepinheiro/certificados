<?php
namespace Application\Entity;

use Doctrine\ORM\EntityRepository;

class EventoRepository extends EntityRepository
{

    public function findAll()
    {
        return parent::findBy(array(), array('nome' => 'ASC')); // TODO: Change the autogenerated stub
    }

    public function eventosDoCoordenador($usuario_id)
    {
        $qb = $this->createQueryBuilder('u');
        $qb->where('u.usuario = ' . $usuario_id);
        
        return $qb->getQuery()->getResult();
    }

    /**
     * Retorna os ultimos eventos do coordenador passadopor parametro
     * 
     * @param
     *            $usuario_id
     * @return array
     */
    public function ultimosEventosDoCoordenador($usuario_id)
    {
        $qb = $this->createQueryBuilder('u');
        $qb->where('u.usuario = ' . $usuario_id);
        $qb->orderBy('u.id', 'ASC');
        $qb->setMaxResults(5);
        
        return $qb->getQuery()->getResult();
    }

    public function getEventosDoParticipante($cpf, $data_nascimento)
    {
        /** @var  $participante \Application\Entity\Participante */
        $participante = $this->_em->getRepository('Application\Entity\Participante')->findOneBy(array(
            'cpf' => $cpf
        ));

        if(is_null($participante)){
            return array();
        }

        if($participante->getDataNascimento()->format('d/m/Y') == '23/12/2017')
        {
            $participante->setDataNascimento(new \DateTime($data_nascimento));

            try{
                $this->_em->flush($participante);
            }catch (\Exception $exception){
                echo $exception->getMessage();
            }
        }

        $qb = $this->_em->createQueryBuilder();
        $qb->select("evento.id, CONCAT(evento.sigla, ' - ', evento.nome, ' - ', evento.ano) as nome")
            ->from('Application\Entity\Evento', 'evento')
            ->from('Application\Entity\Participacao', 'participacao')
            ->from('Application\Entity\Atividade', 'atividade')
            ->from('Application\Entity\Participante', 'participante');
        
        $qb->andWhere('participacao.participante = participante.id');
        $qb->andWhere('participacao.atividade = atividade.id');
        $qb->andWhere('atividade.evento = evento.id');
        
        $qb->andWhere('participante.cpf = ' . $cpf);
        $qb->andWhere('participante.dataNascimento = ' . $data_nascimento);

        $qb->distinct();
        $query1 = $qb->getQuery();
        return $query1->getResult();
    }

}
