<?php
namespace Application\Form;

use Base\Form\FormAbstract;
use Doctrine\ORM\EntityManager;
use DoctrineModule\Form\Element\ObjectSelect;
use Zend\Form\Element;

class Aluno extends FormAbstract
{

    private $entityManager;

    public function __construct($_name = 'Salvar', EntityManager $entityManager)
    {
        parent::__construct($_name);
        
        $this->entityManager = $entityManager;
        
        $this->setInputFilter((new Filter\Aluno($this->entityManager))->getInputFilter());
        
        $id = new Element\Hidden('id');
        $this->add($id);
        
        $nome = new Element\Text('nome');
        $nome->setOptions(array(
            'label' => 'Nome <span class="required" aria-required="true"> * </span>'
        ))
            ->setAttribute('placeholder', 'Nome ')
            ->setAttribute('class', 'form-control');
        $this->add($nome);
        
        $email = new Element\Email('email');
        $email->setOptions(array(
            'label' => 'Email'
        ))
            ->setAttribute('placeholder', 'Email')
            ->setAttribute('class', 'form-control');
        $this->add($email);
        
        $login = new Element\Text('login');
        $login->setOptions(array(
            'label' => 'CPF <span class="required" aria-required="true"> * </span>'
        ))
            ->setAttribute('placeholder', 'CPF')
            ->setAttribute('class', 'form-control')
            ->setAttribute('id', 'cpf');
        $this->add($login);
        
        $this->add(array(
            'name' => 'senha',
            'type' => 'Zend\Form\Element\Password',
            'options' => array(
                'label' => 'Senha <span class="required" aria-required="true"> * </span>'
            ),
            'attributes' => array(
                'placeholder' => ' Senha'
            )
        ));
        
        $this->add(array(
            'name' => 'confirmarsenha',
            'type' => 'Zend\Form\Element\Password',
            'options' => array(
                'label' => 'Confirmar Senha <span class="required" aria-required="true"> * </span>'
            ),
            'attributes' => array(
                'placeholder' => 'Confirmar Senha'
            )
        ));
        
        $curso = new ObjectSelect('curso');
        $curso->setOptions(array(
            'label' => 'Curso <span class="required" aria-required="true"> * </span>',
            'object_manager' => $entityManager,
            'target_class' => 'Application\Entity\Curso',
            'is_method' => true,
            'display_empty_item' => true,
            'find_method' => array(
                'name' => 'findAll'
            )
        ))
            ->setAttribute('onchange', 'loadTurma(this.value)')
            ->setAttribute('placeholder', 'Curso');
        $curso->setValue(0);
        $this->add($curso);
        
        $turma = new Element\Select('turma');
        $turma->setLabel('Turma');
        $turma->setEmptyOption('');
        $turma->setAttribute('id', 'turma');
        $turma->setDisableInArrayValidator(true);
        $this->add($turma);
        
        $submit = new Element\Submit('submit');
        $this->add($submit);
    }

    public function editingMode()
    {
        $this->editingMode = true;
        
        $this->remove('curso');
        $this->remove('turma');
        
        $this->get('senha')->setAttribute('description', 'Mantenha o campo em branco pra manter a senha antiga');
        
        $this->getInputFilter()
            ->get('turma')
            ->setRequired(false);
        $this->getInputFilter()
            ->get('curso')
            ->setRequired(false);
        $this->getInputFilter()
            ->get('senha')
            ->setRequired(false);
        $this->getInputFilter()
            ->get('confirmarsenha')
            ->setRequired(false);
    }

    public function setData($data)
    {
        if (! $this->editingMode) {
            
            $this->get('curso')->setValue($data['curso']);
            
            if ($data['curso']) {
                $curso = $this->entityManager->getRepository('Application\Entity\Curso')->find($data['curso']);
                $turmas = $this->entityManager->getRepository('Application\Entity\Turma')->getTurmaArray($curso);
                $this->get('turma')->setValueOptions($turmas);
            }
            
            if ($data['turma']) {
                $this->get('turma')->setValue($data['turma']);
            }
        }
        
        return parent::setData($data); // TODO: Change the autogenerated stub
    }
}